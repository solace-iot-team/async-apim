openapi: 3.0.0
info:
  title: Solace Async API Management Server
  description: 'Async API Management Server.'
  version: 0.0.4
servers:
- url: /apim-server/v1
tags:
- name: APSConfig
  description: "Configuration of the system."
- name: APSUsers
  description: "Users of the system."
- name: Examples
  description: Simple example endpoints
- name: Specification
  description: The swagger API specification
paths:
  /apsConfig/apsConnectors:
    post:
      operationId: createApsConnector
      description: Create an APSConnector object.
      tags:
      - APSConfig
      requestBody:
        description: The APSConnector object to create.
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/APSConnectorCreate'
      responses:
        '201':
          description: Successful creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSConnector'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '422':
          description: "APSConnector object with connectorId already exists."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    get:
      operationId: listApsConnectors
      description: Get a list of APSConnectors. 
      tags:
      - APSConfig
      responses:
        '200':
          description: Array of APSConnector objects and total count. Returns empty array if none found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApsConnectorsResponse'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  /apsConfig/apsConnectors/active:
    get:
      operationId: getActiveApsConnector
      description: Get the currently active APSConnector object. 
      tags:
      - APSConfig
      responses:
        '200':
          description: The active APSConnector object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSConnector'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  
  /apsConfig/apsConnectors/{connector_id}:        
    parameters:
    - $ref: '#/components/parameters/connector_id'
    get:
      operationId: getApsConnector
      description: Get an APSConnector object by id. 
      tags:
      - APSConfig
      responses:
        '200':
          description: The APSConnector object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSConnector'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    put:
      operationId: replaceApsConnector
      description: Replace an APSConnector object by connector id.
      tags:
      - APSConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APSConnectorReplace"
      responses:
        '200':
          description: The APSConnector object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSConnector'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    delete:
      operationId: deleteApsConnector
      tags:
      - APSConfig
      responses:
        '204':
          description: Deleted successfully.
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  /apsConfig/apsConnectors/{connector_id}/active:        
    parameters:
    - $ref: '#/components/parameters/connector_id'
    post:
      operationId: setApsConnectorActive
      description: Sets the APSConnector object to active.
      tags:
      - APSConfig
      responses:
        '201':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSConnector'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
                
  /apsUsers:
    post:
      operationId: createApsUser
      description: Create an APSUser object.
      tags:
      - APSUsers
      requestBody:
        description: The APSUser to create.
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/APSUser'
      responses:
        '201':
          description: Successful creation of new APSUser.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSUser'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '405':
          description: "Method Not Allowed."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '422':
          description: "User with userId already exists."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    get:
      operationId: listApsUsers
      description: Get a list of APSUsers. 
      tags:
      - APSUsers
      parameters:
      - $ref: '#/components/parameters/page_size'
      - $ref: '#/components/parameters/page_number'
      - $ref: '#/components/parameters/sort_field_name'
      - $ref: '#/components/parameters/sort_direction'
      - $ref: '#/components/parameters/search_word_list'
      responses:
        '200':
          description: Array of APSUsers and total count of APSUsers. Returns empty array if none found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApsUsersResponse'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  /apsUsers/{user_id}:        
    parameters:
    - $ref: '#/components/parameters/user_id'
    get:
      operationId: getApsUser
      description: Get a APSUser object by user id. 
      tags:
      - APSUsers
      responses:
        '200':
          description: The APSUser object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSUser'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    patch:
      operationId: updateApsUser
      description: |
        Update an APSUser object by user id. 
        Operation performs a merge update between the exsting APSUser object and the update request.
        New array values are added to existing arrays.
      tags:
      - APSUsers
      requestBody:
        description: Update an APSUser object.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APSUserUpdate"
      responses:
        '200':
          description: The APSUser object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSUser'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    put:
      operationId: replaceApsUser
      description: Replace an APSUser object by user id.
      tags:
      - APSUsers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APSUserReplace"
      responses:
        '200':
          description: The APSUser object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSUser'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
    delete:
      operationId: deleteApsUser
      tags:
      - APSUsers
      responses:
        '204':
          description: Deleted successfully.
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '403':
          description: "Forbidden."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  /apsLogin/login:
    post:
      operationId: login
      description: Login.
      tags:
      - APSLogin
      requestBody:
        description: The login credentials.
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/APSUserLoginCredentials'
      responses:
        '200':
          description: Successful login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APSUser'
        '400':
          description: "Bad Request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
            "*/*":
              schema:
                $ref: "#/components/schemas/APSError"
        '401':
          description: "Unauthorized."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
        '500':
          description: "Internal Server Error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APSError"
  /examples:
    get:
      tags:
      - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
          content: {}
    post:
      tags:
      - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBody'
        required: true
      responses:
        200:
          description: Returns all examples
          content: {}
  /examples/{id}:
    get:
      tags:
      - Examples
      parameters:
      - name: id
        in: path
        description: The id of the example to retrieve
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Return the example with the specified id
          content: {}
        404:
          description: Example not found
          content: {}
  /spec:
    get:
      tags:
      - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
components:
  parameters:
    page_size:
      name: pageSize
      in: query
      description: "The number of items to get per page. Min: 1 Max: 100."
      required: false
      schema:
        type: integer
        format: int32
        default: 20
        minimum: 1
        maximum: 100
    page_number:
      name: pageNumber
      in: query
      description: "The page number to get. Min: 1"
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
    sort_field_name:
      name: sortFieldName
      in: query
      description: The field name of the APSObject to sort by. Must exist on the APSObject.
      example: 'for APSUser: "isActivated", "profile.first".'
      required: false
      schema:
        type: string
    sort_direction:
      name: sortDirection
      in: query
      description: The sort direction.
      required: false
      schema:
        $ref: '#/components/schemas/EAPSSortDirection'
    search_word_list:
      name: searchWordList
      in: query
      description: The list of words separated by &lt;space> to search in the APSObject.
      example: 'first-name last-name'
      required: false
      schema:
        type: string
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/APSUserId"
    connector_id:
      name: connector_id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/APSId"
  schemas:
    APSId:
      description: Unique Id of an object.
      type: string
      minLength: 4
      maxLength: 255
      pattern: ^[A-Za-z0-9_-]*$
    APSUserId:
      type: string
      minLength: 4
      maxLength: 64
      pattern: ^\S*$
    APSHost:  
      description: Hostname or IP address.
      type: string
      maxLength: 255
      # from: https://regexr.com/3dt4r
      pattern: ^(localhost)|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)+([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$
    APSPort:  
      description: Port number.
      type: integer
      minimum: 0
      maximum: 65535
    APSEmail:
      description: E-Mail address.
      type: string
      # from: https://regexr.com/3e48o
      pattern: ^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$
    APSOrganizationIdList:
      description: List of Organization Ids.
      type: array
      items:
        type: string
    EAPSSortDirection:
      description: sort direction for query
      type: string
      enum:
      - asc
      - desc
    APSListResponseMeta:
      type: object
      properties:
        meta:
          type: object
          properties: 
            totalCount:
              description: The total count of objects in the collection at time of call.
              type: integer
              format: int32
          required:
            - totalCount
      required:
        - meta
    APSErrorIds:
      description: "The error Id which uniquely identifies the error that has occurred."
      type: string
      enum:
      - duplicateKey
      - keyNotFound
      - internalServerError
      - missingParameter
      - openApiRequestValidation
      - openApiResponseValidation
      - objectNotFound
      - notAuthorized
      - pathNotFound
      - invalidSortFieldName
    APSErrorMeta:
      type: object
      description: Additional details about the error.
      additionalProperties:
        anyOf:
        - type: string
        - type: number
        - type: integer
        - type: boolean
        - type: array
          items: {}
        - type: object
    APSError:
      type: object
      properties:
        description:
          type: string
          description: "The verbose description of the problem."
        errorId:
          $ref: "#/components/schemas/APSErrorIds"
        meta:
          $ref: "#/components/schemas/APSErrorMeta"
      required:
      - description
      - errorId
    EAPSAuthRole:
      type: string
      enum:
      - root
      - loginAs
      - systemAdmin
      - organizationAdmin
      - apiTeam
      - apiConsumer
    EAPSAuthRoleList:
      type: array
      items:
        $ref: "#/components/schemas/EAPSAuthRole"
    EAPSClientProtocol:
      type: string
      enum:
      - http
      - https
    APSConnectorClientConfig:
      description: Configuration of the client for the connector.
      type: object
      properties:
        protocol: 
          $ref: "#/components/schemas/EAPSClientProtocol"
        host:
          $ref: "#/components/schemas/APSHost"
        port:
          $ref: "#/components/schemas/APSPort"
        apiVersion:
          type: string
        serviceUser:
          description: A user who has access to all resources of the connector.
          type: string
        serviceUserPwd:
          description: The password for the serviceUser.
          type: string
      required:
      - protocol
      - host
      - port
      - apiVersion
      - serviceUser
      - serviceUserPwd
    ListApsConnectorsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/APSListResponseMeta'
      properties:
        list:
          $ref: '#/components/schemas/APSConnectorList'
      required:
      - list
    APSConnectorList:  
      description: Array of APSConnector objects.
      type: array
      items:
        $ref: '#/components/schemas/APSConnector'
    APSConnector:
      description: An APSConnector object.
      type: object
      properties:
        connectorId:
          $ref: "#/components/schemas/APSId"
        isActive:
          type: boolean
        displayName:
          type: string
        description:
          type: string
        connectorClientConfig:
          $ref: "#/components/schemas/APSConnectorClientConfig"
      required:
        - displayName
        - description
        - connectorClientConfig
        - connectorId
        - isActive
    APSConnectorCreate:
      description: Create an APSConnector object.
      type: object
      properties:
        connectorId:
          $ref: "#/components/schemas/APSId"
        displayName:
          type: string
        description:
          type: string
        connectorClientConfig:
          $ref: "#/components/schemas/APSConnectorClientConfig"
      required:
        - displayName
        - description
        - connectorClientConfig
        - connectorId
    APSConnectorReplace:  
      description: Replace an existing APSConnector object.
      type: object
      properties:
        displayName:
          type: string
        description:
          type: string
        connectorClientConfig:
          $ref: "#/components/schemas/APSConnectorClientConfig"
      required:
        - displayName
        - description
        - connectorClientConfig
    APSUserLoginCredentials:
      type: object
      description: Login credentials.
      properties:
        userId: 
          type: string
        userPwd:
          type: string
      required:
      - userId
      - userPwd
    APSUserProfile:
      type: object
      description: User profile info.
      properties:
        first:
          type: string
        last:
          type: string
        email:
          $ref: '#/components/schemas/APSEmail'
      required:
        - first
        - last
        - email
    APSUserProfileUpdate:
      type: object
      description: User profile info.
      properties:
        first:
          type: string
        last:
          type: string
        email:
          $ref: '#/components/schemas/APSEmail'
    ListApsUsersResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/APSListResponseMeta'
      properties:
        list:
          $ref: '#/components/schemas/APSUserList'
      required:
      - list
    APSUserList:      
      description: Array of APSUsers.
      type: array
      items:
        $ref: '#/components/schemas/APSUser'
    APSUser:
      description: "A user."
      type: object
      properties:
        isActivated:
          type: boolean
        userId:
          $ref: "#/components/schemas/APSUserId"
        password:
          type: string
        profile:
          $ref: "#/components/schemas/APSUserProfile"
        roles:
          $ref: '#/components/schemas/EAPSAuthRoleList'
        memberOfOrganizations:
          $ref: '#/components/schemas/APSOrganizationIdList'
      required:
        - isActivated
        - userId
        - password
        - profile
        - roles
    APSUserUpdate:
      description: Update for an APSUser object.
      type: object
      properties:
        isActivated:
          type: boolean
        password:
          type: string
        profile:
          $ref: "#/components/schemas/APSUserProfileUpdate"
        roles:
          $ref: '#/components/schemas/EAPSAuthRoleList'
        memberOfOrganizations:
          type: array
          items:
            type: string
    APSUserReplace:
      description: Replace an existing APSUser object.
      type: object
      properties:
        isActivated:
          type: boolean
        password:
          type: string
        profile:
          $ref: "#/components/schemas/APSUserProfile"
        roles:
          $ref: '#/components/schemas/EAPSAuthRoleList'
        memberOfOrganizations:
          type: array
          items:
            type: string
      required:
        - isActivated
        - password
        - profile
        - roles
    ExampleBody:
      title: example
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
